import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,b as o,d as r,a as i,r as n,e as s}from"./app-DFk01ace.js";const l={},p={href:"https://github.com/docker/swarmkit/",target:"_blank",rel:"noopener noreferrer"};function m(g,e){const d=n("ExternalLinkIcon");return a(),t("div",null,[e[4]||(e[4]=o("h1",{id:"基本概念",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#基本概念"},[o("span",null,"基本概念")])],-1)),o("p",null,[e[1]||(e[1]=o("code",null,"Swarm",-1)),e[2]||(e[2]=r(" 是使用 ")),o("a",p,[e[0]||(e[0]=o("code",null,"SwarmKit",-1)),i(d)]),e[3]||(e[3]=r(" 构建的 Docker 引擎内置（原生）的集群管理和编排工具。"))]),e[5]||(e[5]=s('<p>使用 <code>Swarm</code> 集群之前需要了解以下几个概念。</p><h2 id="节点" tabindex="-1"><a class="header-anchor" href="#节点"><span>节点</span></a></h2><p>运行 Docker 的主机可以主动初始化一个 <code>Swarm</code> 集群或者加入一个已存在的 <code>Swarm</code> 集群，这样这个运行 Docker 的主机就成为一个 <code>Swarm</code> 集群的节点 (<code>node</code>) 。</p><p>节点分为管理 (<code>manager</code>) 节点和工作 (<code>worker</code>) 节点。</p><p>管理节点用于 <code>Swarm</code> 集群的管理，<code>docker swarm</code> 命令基本只能在管理节点执行（节点退出集群命令 <code>docker swarm leave</code> 可以在工作节点执行）。一个 <code>Swarm</code> 集群可以有多个管理节点，但只有一个管理节点可以成为 <code>leader</code>，<code>leader</code> 通过 <code>raft</code> 协议实现。</p><p>工作节点是任务执行节点，管理节点将服务 (<code>service</code>) 下发至工作节点执行。管理节点默认也作为工作节点。你也可以通过配置让服务只运行在管理节点。</p><p>来自 Docker 官网的这张图片形象的展示了集群中管理节点与工作节点的关系。</p><figure><img src="https://docs.docker.com/engine/swarm/images/swarm-diagram.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="服务和任务" tabindex="-1"><a class="header-anchor" href="#服务和任务"><span>服务和任务</span></a></h2><p>任务 （<code>Task</code>）是 <code>Swarm</code> 中的最小的调度单位，目前来说就是一个单一的容器。</p><p>服务 （<code>Services</code>） 是指一组任务的集合，服务定义了任务的属性。服务有两种模式：</p><ul><li><p><code>replicated services</code> 按照一定规则在各个工作节点上运行指定个数的任务。</p></li><li><p><code>global services</code> 每个工作节点上运行一个任务</p></li></ul><p>两种模式通过 <code>docker service create</code> 的 <code>--mode</code> 参数指定。</p><p>来自 Docker 官网的这张图片形象的展示了容器、任务、服务的关系。</p><figure><img src="https://docs.docker.com/engine/swarm/images/services-diagram.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',15))])}const f=c(l,[["render",m],["__file","overview.html.vue"]]),h=JSON.parse('{"path":"/index/Docker/swarm_mode/overview.html","title":"基本概念","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"节点","slug":"节点","link":"#节点","children":[]},{"level":2,"title":"服务和任务","slug":"服务和任务","link":"#服务和任务","children":[]}],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.46,"words":439},"filePathRelative":"index/Docker/swarm_mode/overview.md","localizedDate":"2024年11月9日","excerpt":"\\n<p><code>Swarm</code> 是使用 <a href=\\"https://github.com/docker/swarmkit/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>SwarmKit</code></a> 构建的 Docker 引擎内置（原生）的集群管理和编排工具。</p>\\n<p>使用 <code>Swarm</code> 集群之前需要了解以下几个概念。</p>\\n<h2>节点</h2>\\n<p>运行 Docker 的主机可以主动初始化一个 <code>Swarm</code> 集群或者加入一个已存在的 <code>Swarm</code> 集群，这样这个运行 Docker 的主机就成为一个 <code>Swarm</code> 集群的节点 (<code>node</code>) 。</p>"}');export{f as comp,h as data};
