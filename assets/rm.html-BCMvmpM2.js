import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as s,o as t}from"./app-BAGG9h-A.js";const c={};function o(r,e){return t(),a("div",null,e[0]||(e[0]=[s(`<h1 id="删除容器" tabindex="-1"><a class="header-anchor" href="#删除容器"><span>删除容器</span></a></h1><p>可以使用 <code>docker container rm</code> 来删除一个处于终止状态的容器。例如</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> container <span class="token function">rm</span> trusting_newton
trusting_newton
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要删除一个运行中的容器，可以添加 <code>-f</code> 参数。Docker 会发送 <code>SIGKILL</code> 信号给容器。</p><h1 id="清理所有处于终止状态的容器" tabindex="-1"><a class="header-anchor" href="#清理所有处于终止状态的容器"><span>清理所有处于终止状态的容器</span></a></h1><p>用 <code>docker container ls -a</code> 命令可以查看所有已经创建的包括终止状态的容器，如果数量太多要一个个删除可能会很麻烦，用下面的命令可以清理掉所有处于终止状态的容器。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> container prune
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7)]))}const l=n(c,[["render",o],["__file","rm.html.vue"]]),p=JSON.parse('{"path":"/index/Docker/container/rm.html","title":"删除容器","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.49,"words":147},"filePathRelative":"index/Docker/container/rm.md","localizedDate":"2024年11月9日","excerpt":"\\n<p>可以使用 <code>docker container rm</code> 来删除一个处于终止状态的容器。例如</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>$ <span class=\\"token function\\">docker</span> container <span class=\\"token function\\">rm</span> trusting_newton\\ntrusting_newton\\n</code></pre></div><p>如果要删除一个运行中的容器，可以添加 <code>-f</code> 参数。Docker 会发送 <code>SIGKILL</code> 信号给容器。</p>"}');export{l as comp,p as data};
