import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,e as o,b as t,d as l,a as n,o as s,r as a}from"./app-BwK79we4.js";const u={},p={href:"http://proxy.example.com:8080/",target:"_blank",rel:"noopener noreferrer"},m={href:"http://proxy.example.com:8080/",target:"_blank",rel:"noopener noreferrer"},c={href:"http://proxy.example.com:8080/",target:"_blank",rel:"noopener noreferrer"},v={href:"http://proxy.example.com:8080/",target:"_blank",rel:"noopener noreferrer"};function x(k,e){const d=a("ExternalLinkIcon");return s(),i("div",null,[e[20]||(e[20]=o(`<h1 id="配置-http-https-网络代理" tabindex="-1"><a class="header-anchor" href="#配置-http-https-网络代理"><span>配置 HTTP/HTTPS 网络代理</span></a></h1><p>使用Docker的过程中，因为网络原因，通常需要使用 HTTP/HTTPS 代理来加速镜像拉取、构建和使用。下面是常见的三种场景。</p><h2 id="为-dockerd-设置网络代理" tabindex="-1"><a class="header-anchor" href="#为-dockerd-设置网络代理"><span>为 dockerd 设置网络代理</span></a></h2><p>&quot;docker pull&quot; 命令是由 dockerd 守护进程执行。而 dockerd 守护进程是由 systemd 管理。因此，如果需要在执行 &quot;docker pull&quot; 命令时使用 HTTP/HTTPS 代理，需要通过 systemd 配置。</p><ul><li>为 dockerd 创建配置文件夹。</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo mkdir -p /etc/systemd/system/docker.service.d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>为 dockerd 创建 HTTP/HTTPS 网络代理的配置文件，文件路径是 /etc/systemd/system/docker.service.d/http-proxy.conf 。并在该文件中添加相关环境变量。</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[Service]
Environment=&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;
Environment=&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;
Environment=&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>刷新配置并重启 docker 服务。</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sudo systemctl daemon-reload
sudo systemctl restart docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="为-docker-容器设置网络代理" tabindex="-1"><a class="header-anchor" href="#为-docker-容器设置网络代理"><span>为 docker 容器设置网络代理</span></a></h2><p>在容器运行阶段，如果需要使用 HTTP/HTTPS 代理，可以通过更改 docker 客户端配置，或者指定环境变量的方式。</p><ul><li>更改 docker 客户端配置：创建或更改 ~/.docker/config.json，并在该文件中添加相关配置。</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
 &quot;proxies&quot;:
 {
   &quot;default&quot;:
   {
     &quot;httpProxy&quot;: &quot;http://proxy.example.com:8080/&quot;,
     &quot;httpsProxy&quot;: &quot;http://proxy.example.com:8080/&quot;,
     &quot;noProxy&quot;: &quot;localhost,127.0.0.1,.example.com&quot;
   }
 }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>指定环境变量：运行 &quot;docker run&quot; 命令时，指定相关环境变量。</li></ul>`,15)),t("table",null,[e[9]||(e[9]=t("thead",null,[t("tr",null,[t("th",null,"环境变量"),t("th",null,"docker run 示例")])],-1)),t("tbody",null,[t("tr",null,[e[3]||(e[3]=t("td",null,"HTTP_PROXY",-1)),t("td",null,[e[1]||(e[1]=l('--env HTTP_PROXY="')),t("a",p,[e[0]||(e[0]=l("http://proxy.example.com:8080/")),n(d)]),e[2]||(e[2]=l('"'))])]),t("tr",null,[e[7]||(e[7]=t("td",null,"HTTPS_PROXY",-1)),t("td",null,[e[5]||(e[5]=l('--env HTTPS_PROXY="')),t("a",m,[e[4]||(e[4]=l("http://proxy.example.com:8080/")),n(d)]),e[6]||(e[6]=l('"'))])]),e[8]||(e[8]=t("tr",null,[t("td",null,"NO_PROXY"),t("td",null,'--env NO_PROXY="localhost,127.0.0.1,.example.com"')],-1))])]),e[21]||(e[21]=o(`<h2 id="为-docker-build-过程设置网络代理" tabindex="-1"><a class="header-anchor" href="#为-docker-build-过程设置网络代理"><span>为 docker build 过程设置网络代理</span></a></h2><p>在容器构建阶段，如果需要使用 HTTP/HTTPS 代理，可以通过指定 &quot;docker build&quot; 的环境变量，或者在 Dockerfile 中指定环境变量的方式。</p><ul><li>使用 &quot;--build-arg&quot; 指定 &quot;docker build&quot; 的相关环境变量</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>docker build \\
    --build-arg &quot;HTTP_PROXY=http://proxy.example.com:8080/&quot; \\
    --build-arg &quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot; \\
    --build-arg &quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot; .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 Dockerfile 中指定相关环境变量</li></ul>`,5)),t("table",null,[e[19]||(e[19]=t("thead",null,[t("tr",null,[t("th",null,"环境变量"),t("th",null,"Dockerfile 示例")])],-1)),t("tbody",null,[t("tr",null,[e[13]||(e[13]=t("td",null,"HTTP_PROXY",-1)),t("td",null,[e[11]||(e[11]=l('ENV HTTP_PROXY="')),t("a",c,[e[10]||(e[10]=l("http://proxy.example.com:8080/")),n(d)]),e[12]||(e[12]=l('"'))])]),t("tr",null,[e[17]||(e[17]=t("td",null,"HTTPS_PROXY",-1)),t("td",null,[e[15]||(e[15]=l('ENV HTTPS_PROXY="')),t("a",v,[e[14]||(e[14]=l("http://proxy.example.com:8080/")),n(d)]),e[16]||(e[16]=l('"'))])]),e[18]||(e[18]=t("tr",null,[t("td",null,"NO_PROXY"),t("td",null,'ENV NO_PROXY="localhost,127.0.0.1,.example.com"')],-1))])])])}const P=r(u,[["render",x],["__file","http_https_proxy.html.vue"]]),h=JSON.parse('{"path":"/index/Docker/advanced_network/http_https_proxy.html","title":"配置 HTTP/HTTPS 网络代理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"为 dockerd 设置网络代理","slug":"为-dockerd-设置网络代理","link":"#为-dockerd-设置网络代理","children":[]},{"level":2,"title":"为 docker 容器设置网络代理","slug":"为-docker-容器设置网络代理","link":"#为-docker-容器设置网络代理","children":[]},{"level":2,"title":"为 docker build 过程设置网络代理","slug":"为-docker-build-过程设置网络代理","link":"#为-docker-build-过程设置网络代理","children":[]}],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.51,"words":453},"filePathRelative":"index/Docker/advanced_network/http_https_proxy.md","localizedDate":"2024年11月9日","excerpt":"\\n<p>使用Docker的过程中，因为网络原因，通常需要使用 HTTP/HTTPS 代理来加速镜像拉取、构建和使用。下面是常见的三种场景。</p>\\n<h2>为 dockerd 设置网络代理</h2>\\n<p>\\"docker pull\\" 命令是由 dockerd 守护进程执行。而 dockerd 守护进程是由 systemd 管理。因此，如果需要在执行 \\"docker pull\\" 命令时使用 HTTP/HTTPS 代理，需要通过 systemd 配置。</p>\\n<ul>\\n<li>为 dockerd 创建配置文件夹。</li>\\n</ul>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>sudo mkdir -p /etc/systemd/system/docker.service.d\\n</code></pre></div>"}');export{P as comp,h as data};
