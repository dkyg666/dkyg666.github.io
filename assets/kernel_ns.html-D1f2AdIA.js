import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as n,d as r,a as s,o as i,r as p}from"./app-dX96qGh5.js";const d={},k={href:"https://en.wikipedia.org/wiki/OpenVZ",target:"_blank",rel:"noopener noreferrer"};function u(m,e){const o=p("ExternalLinkIcon");return i(),l("div",null,[e[5]||(e[5]=n("h1",{id:"内核命名空间",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#内核命名空间"},[n("span",null,"内核命名空间")])],-1)),e[6]||(e[6]=n("p",null,[r("Docker 容器和 LXC 容器很相似，所提供的安全特性也差不多。当用 "),n("code",null,"docker run"),r(" 启动一个容器时，在后台 Docker 为容器创建了一个独立的命名空间和控制组集合。")],-1)),e[7]||(e[7]=n("p",null,"命名空间提供了最基础也是最直接的隔离，在容器中运行的进程不会被运行在主机上的进程和其它容器发现和作用。",-1)),e[8]||(e[8]=n("p",null,"每个容器都有自己独有的网络栈，意味着它们不能访问其他容器的 sockets 或接口。不过，如果主机系统上做了相应的设置，容器可以像跟主机交互一样的和其他容器交互。当指定公共端口或使用 links 来连接 2 个容器时，容器就可以相互通信了（可以根据配置来限制通信的策略）。",-1)),e[9]||(e[9]=n("p",null,"从网络架构的角度来看，所有的容器通过本地主机的网桥接口相互通信，就像物理机器通过物理交换机通信一样。",-1)),e[10]||(e[10]=n("p",null,"那么，内核中实现命名空间和私有网络的代码是否足够成熟？",-1)),e[11]||(e[11]=n("p",null,"内核命名空间从 2.6.15 版本（2008 年 7 月发布）之后被引入，数年间，这些机制的可靠性在诸多大型生产系统中被实践验证。",-1)),n("p",null,[e[1]||(e[1]=r("实际上，命名空间的想法和设计提出的时间要更早，最初是为了在内核中引入一种机制来实现 ")),n("a",k,[e[0]||(e[0]=r("OpenVZ")),s(o)]),e[2]||(e[2]=r(" 的特性。")),e[3]||(e[3]=n("br",null,null,-1)),e[4]||(e[4]=r(" 而 OpenVZ 项目早在 2005 年就发布了，其设计和实现都已经十分成熟。"))])])}const x=t(d,[["render",u],["__file","kernel_ns.html.vue"]]),g=JSON.parse('{"path":"/index/Docker/security/kernel_ns.html","title":"内核命名空间","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.38,"words":413},"filePathRelative":"index/Docker/security/kernel_ns.md","localizedDate":"2024年11月9日","excerpt":"\\n<p>Docker 容器和 LXC 容器很相似，所提供的安全特性也差不多。当用 <code>docker run</code> 启动一个容器时，在后台 Docker 为容器创建了一个独立的命名空间和控制组集合。</p>\\n<p>命名空间提供了最基础也是最直接的隔离，在容器中运行的进程不会被运行在主机上的进程和其它容器发现和作用。</p>\\n<p>每个容器都有自己独有的网络栈，意味着它们不能访问其他容器的 sockets 或接口。不过，如果主机系统上做了相应的设置，容器可以像跟主机交互一样的和其他容器交互。当指定公共端口或使用 links 来连接 2 个容器时，容器就可以相互通信了（可以根据配置来限制通信的策略）。</p>"}');export{x as comp,g as data};
