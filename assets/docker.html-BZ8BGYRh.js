import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,e as i,b as a,d as s,a as r,w as e,r as c,o as k}from"./app-dX96qGh5.js";const m={},v={href:"https://hub.docker.com/r/xhofe/alist-aria2",target:"_blank",rel:"noopener noreferrer"},b={href:"https://hub.docker.com/r/xhofe/alist",target:"_blank",rel:"noopener noreferrer"};function g(h,n){const o=c("ExternalLinkIcon"),p=c("Tabs");return k(),u("div",null,[n[13]||(n[13]=i(`<h1 id="使用-docker" tabindex="-1"><a class="header-anchor" href="#使用-docker"><span>使用 Docker</span></a></h1><h2 id="查看管理员信息" tabindex="-1"><a class="header-anchor" href="#查看管理员信息"><span><strong>查看管理员信息：</strong></span></a></h2><h4 id="低于v3-25-0版本" tabindex="-1"><a class="header-anchor" href="#低于v3-25-0版本"><span><strong>低于v3.25.0版本</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> alist ./alist admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="高于v3-25-0版本" tabindex="-1"><a class="header-anchor" href="#高于v3-25-0版本"><span><strong>高于v3.25.0版本</strong></span></a></h4><p>3.25.0以上版本将密码改成加密方式存储的hash值，无法直接反算出密码，如果忘记了密码只能通过重新 <strong><code>随机生成</code></strong> 或者 <strong><code>手动设置</code></strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 随机生成一个密码</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> alist ./alist admin random
<span class="token comment"># 手动设置一个密码,\`NEW_PASSWORD\`是指你需要设置的密码</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> alist ./alist admin <span class="token builtin class-name">set</span> NEW_PASSWORD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发行版本" tabindex="-1"><a class="header-anchor" href="#发行版本"><span><strong>发行版本</strong></span></a></h2><h5 id="docker-cli" tabindex="-1"><a class="header-anchor" href="#docker-cli"><span><strong>docker-cli</strong></span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>unless-stopped <span class="token parameter variable">-v</span> /etc/alist:/opt/alist/data <span class="token parameter variable">-p</span> <span class="token number">5244</span>:5244 <span class="token parameter variable">-e</span> <span class="token assign-left variable">PUID</span><span class="token operator">=</span><span class="token number">0</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">PGID</span><span class="token operator">=</span><span class="token number">0</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">UMASK</span><span class="token operator">=</span>022 <span class="token parameter variable">--name</span><span class="token operator">=</span><span class="token string">&quot;alist&quot;</span> xhofe/alist:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span><strong>docker-compose</strong></span></a></h5><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
    <span class="token key atrule">alist</span><span class="token punctuation">:</span>
        <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&#39;xhofe/alist:latest&#39;</span>
        <span class="token key atrule">container_name</span><span class="token punctuation">:</span> alist
        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token string">&#39;/etc/alist:/opt/alist/data&#39;</span>
        <span class="token key atrule">ports</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token string">&#39;5244:5244&#39;</span>
        <span class="token key atrule">environment</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> PUID=0
            <span class="token punctuation">-</span> PGID=0
            <span class="token punctuation">-</span> UMASK=022
        <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务运行之后，容器默认的时区为UTC时区，如果你想指定容器运行的时区，则可以通过传递此变量来实现：<code>-e &quot;TZ=Asia/Shanghai&quot;</code>。</p><h3 id="使用-aria2-离线下载" tabindex="-1"><a class="header-anchor" href="#使用-aria2-离线下载"><span><strong>使用 aria2 离线下载</strong></span></a></h3>`,14)),a("p",null,[n[1]||(n[1]=s("如果你想使用aria2离线下载，我们推荐你使用这个")),a("a",v,[n[0]||(n[0]=s("image")),r(o)]),n[2]||(n[2]=s("，它预装了aria2。"))]),n[14]||(n[14]=i(`<h3 id="开发版本" tabindex="-1"><a class="header-anchor" href="#开发版本"><span><strong>开发版本</strong></span></a></h3><p>仅适用于 amd64/arm64。不推荐，这可能无法正常工作。</p><h5 id="docker-cli-1" tabindex="-1"><a class="header-anchor" href="#docker-cli-1"><span><strong>docker-cli</strong></span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>unless-stopped <span class="token parameter variable">-v</span> /etc/alist:/opt/alist/data <span class="token parameter variable">-p</span> <span class="token number">5244</span>:5244 <span class="token parameter variable">-e</span> <span class="token assign-left variable">PUID</span><span class="token operator">=</span><span class="token number">0</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">PGID</span><span class="token operator">=</span><span class="token number">0</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">UMASK</span><span class="token operator">=</span>022 <span class="token parameter variable">--name</span><span class="token operator">=</span><span class="token string">&quot;alist&quot;</span> xhofe/alist:beta
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="docker-compose-1" tabindex="-1"><a class="header-anchor" href="#docker-compose-1"><span><strong>docker-compose</strong></span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#创建一个目录</span>
<span class="token function">mkdir</span> /etc/alist
<span class="token comment">#进入该目录</span>
<span class="token builtin class-name">cd</span> /etc/alist
<span class="token comment">#下载docker-compose.yml文件</span>
<span class="token function">wget</span> https://alist.nn.ci/docker-compose.yml
<span class="token comment">#运行容器</span>
<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>你也可以自行创建一个包含以下内容的<code>docker-compose.yml</code>文件</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
    <span class="token key atrule">alist</span><span class="token punctuation">:</span>
        <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&#39;xhofe/alist:beta&#39;</span>
        <span class="token key atrule">container_name</span><span class="token punctuation">:</span> alist
        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token string">&#39;/etc/alist:/opt/alist/data&#39;</span>
        <span class="token key atrule">ports</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token string">&#39;5244:5244&#39;</span>
        <span class="token key atrule">environment</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> PUID=0
            <span class="token punctuation">-</span> PGID=0
            <span class="token punctuation">-</span> UMASK=022
        <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指定版本" tabindex="-1"><a class="header-anchor" href="#指定版本"><span><strong>指定版本</strong></span></a></h3>`,9)),a("p",null,[n[4]||(n[4]=s("有关详细信息，请参阅 ")),a("a",b,[n[3]||(n[3]=s("https://hub.docker.com/r/xhofe/alist")),r(o)])]),n[15]||(n[15]=i('<h3 id="内置-ffmpeg-版镜像" tabindex="-1"><a class="header-anchor" href="#内置-ffmpeg-版镜像"><span><strong>内置 ffmpeg 版镜像</strong></span></a></h3><p>在任何镜像 tag 后添加 <code>-ffmpeg</code> 即可切换到带有开箱即用的 ffmpeg 环境版本镜像</p><p>如果缩略图功能仍无法使用，请确认:</p><ul><li>使用的是本地存储</li><li>切换到网格视图</li><li>本地存储的缩略图开关开启</li><li>本地存储的缩略图缓存文件夹配置路径正确，例如 <code>data/thumbnail</code></li></ul>',4)),r(p,{id:"92",data:[{id:"正式版"},{id:"测试版"}],"tab-id":"Docker-ffmpeg"},{title0:e(({value:l,isActive:t})=>n[5]||(n[5]=[s("正式版")])),title1:e(({value:l,isActive:t})=>n[6]||(n[6]=[s("测试版")])),tab0:e(({value:l,isActive:t})=>n[7]||(n[7]=[a("p",null,[a("strong",null,"docker-cli")],-1),a("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-d"),s(),a("span",{class:"token parameter variable"},"--restart"),a("span",{class:"token operator"},"="),s("unless-stopped "),a("span",{class:"token parameter variable"},"-v"),s(" /etc/alist:/opt/alist/data "),a("span",{class:"token parameter variable"},"-p"),s(),a("span",{class:"token number"},"5244"),s(":5244 "),a("span",{class:"token parameter variable"},"-e"),s(),a("span",{class:"token assign-left variable"},"PUID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),s(),a("span",{class:"token parameter variable"},"-e"),s(),a("span",{class:"token assign-left variable"},"PGID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),s(),a("span",{class:"token parameter variable"},"-e"),s(),a("span",{class:"token assign-left variable"},"UMASK"),a("span",{class:"token operator"},"="),s("022 "),a("span",{class:"token parameter variable"},"--name"),a("span",{class:"token operator"},"="),a("span",{class:"token string"},'"alist"'),s(` xhofe/alist:latest-ffmpeg
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),a("p",null,[a("strong",null,"docker-compose")],-1),a("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[s("version: "),a("span",{class:"token string"},"'3.3'"),s(`
services:
    alist:
        image: `),a("span",{class:"token string"},"'xhofe/alist:latest-ffmpeg'"),s(`
        container_name: alist
        volumes:
            - `),a("span",{class:"token string"},"'/etc/alist:/opt/alist/data'"),s(`
        ports:
            - `),a("span",{class:"token string"},"'5244:5244'"),s(`
        environment:
            - `),a("span",{class:"token assign-left variable"},"PUID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),s(`
            - `),a("span",{class:"token assign-left variable"},"PGID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),s(`
            - `),a("span",{class:"token assign-left variable"},"UMASK"),a("span",{class:"token operator"},"="),s(`022
        restart: unless-stopped
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1)])),tab1:e(({value:l,isActive:t})=>n[8]||(n[8]=[a("p",null,[a("strong",null,"docker-cli")],-1),a("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-d"),s(),a("span",{class:"token parameter variable"},"--restart"),a("span",{class:"token operator"},"="),s("unless-stopped "),a("span",{class:"token parameter variable"},"-v"),s(" /etc/alist:/opt/alist/data "),a("span",{class:"token parameter variable"},"-p"),s(),a("span",{class:"token number"},"5244"),s(":5244 "),a("span",{class:"token parameter variable"},"-e"),s(),a("span",{class:"token assign-left variable"},"PUID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),s(),a("span",{class:"token parameter variable"},"-e"),s(),a("span",{class:"token assign-left variable"},"PGID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),s(),a("span",{class:"token parameter variable"},"-e"),s(),a("span",{class:"token assign-left variable"},"UMASK"),a("span",{class:"token operator"},"="),s("022 "),a("span",{class:"token parameter variable"},"--name"),a("span",{class:"token operator"},"="),a("span",{class:"token string"},'"alist"'),s(` xhofe/alist:beta-ffmpeg
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),a("p",null,[a("strong",null,"docker-compose")],-1),a("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[s("version: "),a("span",{class:"token string"},"'3.3'"),s(`
services:
    alist:
        image: `),a("span",{class:"token string"},"'xhofe/alist:beta-ffmpeg'"),s(`
        container_name: alist
        volumes:
            - `),a("span",{class:"token string"},"'/etc/alist:/opt/alist/data'"),s(`
        ports:
            - `),a("span",{class:"token string"},"'5244:5244'"),s(`
        environment:
            - `),a("span",{class:"token assign-left variable"},"PUID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),s(`
            - `),a("span",{class:"token assign-left variable"},"PGID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),s(`
            - `),a("span",{class:"token assign-left variable"},"UMASK"),a("span",{class:"token operator"},"="),s(`022
        restart: unless-stopped
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1)])),_:1}),n[16]||(n[16]=i(`<h3 id="用户-组标识符" tabindex="-1"><a class="header-anchor" href="#用户-组标识符"><span><strong>用户/组标识符</strong></span></a></h3><p>当使用卷（<code>-v</code> 标志）权限问题时，主机操作系统和容器之间可能会出现权限问题，我们通过允许您指定用户 <code>PUID</code> 和组 <code>PGID</code> 来避免此问题。</p><p>确保主机上的任何卷目录都归您指定的同一用户所有，任何权限问题都会像魔术一样消失。</p><p>在这种情况下，<code>PUID=1000</code> 和 <code>PGID=1000</code>，要找到你的使用 <code>id user</code>，如下所示：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>  $ <span class="token function">id</span> username
    <span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>dockeruser<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>dockergroup<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>dockergroup<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手动编译-docker-镜像" tabindex="-1"><a class="header-anchor" href="#手动编译-docker-镜像"><span><strong>手动编译 Docker 镜像</strong></span></a></h3><p>安装 docker，克隆仓库后进入仓库根目录，无需其他准备</p>`,7)),r(p,{id:"133",data:[{id:"basic"},{id:"with ffmpeg"}],"tab-id":"Docker-build"},{title0:e(({value:l,isActive:t})=>n[9]||(n[9]=[s("basic")])),title1:e(({value:l,isActive:t})=>n[10]||(n[10]=[s("with ffmpeg")])),tab0:e(({value:l,isActive:t})=>n[11]||(n[11]=[a("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),s(" build "),a("span",{class:"token parameter variable"},"-t"),s(" xhofe/alist:latest "),a("span",{class:"token builtin class-name"},"."),s(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1)])),tab1:e(({value:l,isActive:t})=>n[12]||(n[12]=[a("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),s(" build "),a("span",{class:"token parameter variable"},"-t"),s(" xhofe/alist:latest-ffmpeg --build-arg "),a("span",{class:"token assign-left variable"},"INSTALL_FFMPEG"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token builtin class-name"},"."),s(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1)])),_:1}),n[17]||(n[17]=i('<h2 id="有关离线下载功能的额外说明" tabindex="-1"><a class="header-anchor" href="#有关离线下载功能的额外说明"><span><strong>有关离线下载功能的额外说明</strong></span></a></h2><p>若没有使用<code>docker pull --platform</code>参数拉取镜像时，docker可能会在64位操作系统上拉取32位镜像,这将可能导致离线下载功能即使在正常配置情况下也无法使用。</p><p>当发生错误时,您会在Alist的日志文件中看到类似错误日志。</p><p><code>ERRO[2022-11-20 12:05:19] error [unaligned 64-bit atomic operation] while run task [download http://pic.rmb.bdstatic.com/bjh/34ee946f7a74435a167ca4351d723374.png to [/ftp](/)]</code></p><p>解决方法,如果是CPU架构是64位，尝试手动拉取64位docker镜像,重新构建容器，再次尝试。</p><p>如果是CPU架构是32位，目前尚无可用方案。</p><h2 id="docker安装怎么更新" tabindex="-1"><a class="header-anchor" href="#docker安装怎么更新"><span><strong>Docker安装怎么更新?</strong></span></a></h2><details class="hint-container details"><summary>docker-cli 更新</summary><ol><li><p>docker ps -a #查看容器(找Alist容器的ID)</p></li><li><p>docker stop ID #停止Alist运行,不然无法删除(这次Alist容器的ID是d429749a6e69，每一次安装都不一样自己看)</p></li><li><p>docker rm ID #删除Alist容器(数据还在只要你不手动删除)</p></li><li><p>docker pull xhofe/alist:latest</p></li><li><p><a href="#docker-cli">输入安装命令点击查看</a></p></li><li><p>更新好了 去看看吧..就这么简单</p></li></ol></details>',8))])}const y=d(m,[["render",g],["__file","docker.html.vue"]]),D=JSON.parse('{"path":"/index/Alist/install/docker.html","title":"使用 Docker","lang":"zh-CN","frontmatter":{"icon":"iconfont icon-geometry","order":5,"category":["Guide"],"tag":["Install","Guide"],"sticky":true,"star":true},"headers":[{"level":2,"title":"查看管理员信息：","slug":"查看管理员信息","link":"#查看管理员信息","children":[{"level":4,"title":"低于v3.25.0版本","slug":"低于v3-25-0版本","link":"#低于v3-25-0版本","children":[]},{"level":4,"title":"高于v3.25.0版本","slug":"高于v3-25-0版本","link":"#高于v3-25-0版本","children":[]}]},{"level":2,"title":"发行版本","slug":"发行版本","link":"#发行版本","children":[{"level":5,"title":"docker-cli","slug":"docker-cli","link":"#docker-cli","children":[]},{"level":5,"title":"docker-compose","slug":"docker-compose","link":"#docker-compose","children":[]},{"level":3,"title":"使用 aria2 离线下载","slug":"使用-aria2-离线下载","link":"#使用-aria2-离线下载","children":[]},{"level":3,"title":"开发版本","slug":"开发版本","link":"#开发版本","children":[{"level":5,"title":"docker-cli","slug":"docker-cli-1","link":"#docker-cli-1","children":[]},{"level":5,"title":"docker-compose","slug":"docker-compose-1","link":"#docker-compose-1","children":[]}]},{"level":3,"title":"指定版本","slug":"指定版本","link":"#指定版本","children":[]},{"level":3,"title":"内置 ffmpeg 版镜像","slug":"内置-ffmpeg-版镜像","link":"#内置-ffmpeg-版镜像","children":[]},{"level":3,"title":"用户/组标识符","slug":"用户-组标识符","link":"#用户-组标识符","children":[]},{"level":3,"title":"手动编译 Docker 镜像","slug":"手动编译-docker-镜像","link":"#手动编译-docker-镜像","children":[]}]},{"level":2,"title":"有关离线下载功能的额外说明","slug":"有关离线下载功能的额外说明","link":"#有关离线下载功能的额外说明","children":[]},{"level":2,"title":"Docker安装怎么更新?","slug":"docker安装怎么更新","link":"#docker安装怎么更新","children":[]}],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.88,"words":1163},"filePathRelative":"index/Alist/install/docker.md","localizedDate":"2024年11月9日","excerpt":"\\n<h2><strong>查看管理员信息：</strong></h2>\\n<h4><strong>低于v3.25.0版本</strong></h4>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">docker</span> <span class=\\"token builtin class-name\\">exec</span> <span class=\\"token parameter variable\\">-it</span> alist ./alist admin\\n</code></pre></div>"}');export{y as comp,D as data};
