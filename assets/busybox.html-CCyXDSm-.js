import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,e as i,b as s,d as a,a as o,o as c,r as l}from"./app-BA4_Sfsq.js";const r="/assets/busybox-logo-Bjk5TFWq.png",u={},d={href:"https://busybox.net/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://git.busybox.net/busybox/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://hub.docker.com/_/busybox/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/docker-library/busybox",target:"_blank",rel:"noopener noreferrer"};function k(y,n){const e=l("ExternalLinkIcon");return c(),p("div",null,[n[12]||(n[12]=i('<h1 id="busybox" tabindex="-1"><a class="header-anchor" href="#busybox"><span>Busybox</span></a></h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><figure><img src="'+r+`" alt="Busybox - Linux 瑞士军刀" tabindex="0" loading="lazy"><figcaption>Busybox - Linux 瑞士军刀</figcaption></figure><p><code>BusyBox</code> 是一个集成了一百多个最常用 Linux 命令和工具（如 <code>cat</code>、<code>echo</code>、<code>grep</code>、<code>mount</code>、<code>telnet</code> 等）的精简工具箱，它只需要几 MB 的大小，很方便进行各种快速验证，被誉为“Linux 系统的瑞士军刀”。</p><p><code>BusyBox</code> 可运行于多款 <code>POSIX</code> 环境的操作系统中，如 <code>Linux</code>（包括 <code>Android</code>）、<code>Hurd</code>、<code>FreeBSD</code> 等。</p><h2 id="获取官方镜像" tabindex="-1"><a class="header-anchor" href="#获取官方镜像"><span>获取官方镜像</span></a></h2><p>可以使用 <code>docker pull</code> 指令下载 <code>busybox:latest</code> 镜像：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> pull busybox:latest
latest: Pulling from library/busybox
5c4213be9af9: Pull complete
Digest: sha256:c6b45a95f932202dbb27c31333c4789f45184a744060f6e569cc9d2bf1b9ad6f
Status: Downloaded newer image <span class="token keyword">for</span> busybox:latest
docker.io/library/busybox:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下载后，可以看到 <code>busybox</code> 镜像只有 <strong>2.433 MB</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> image <span class="token function">ls</span>
REPOSITORY                   TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
busybox                   latest              e72ac664f4f0        <span class="token number">6</span> weeks ago         <span class="token number">2.433</span> MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行-busybox" tabindex="-1"><a class="header-anchor" href="#运行-busybox"><span>运行 busybox</span></a></h2><p>启动一个 <code>busybox</code> 容器，并在容器中执行 <code>grep</code> 命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> run <span class="token parameter variable">-it</span> busybox
/ <span class="token comment"># grep</span>
BusyBox v1.22.1 <span class="token punctuation">(</span><span class="token number">2014</span>-05-22 <span class="token number">23</span>:22:11 UTC<span class="token punctuation">)</span> multi-call binary.

Usage: <span class="token function">grep</span> <span class="token punctuation">[</span>-HhnlLoqvsriwFE<span class="token punctuation">]</span> <span class="token punctuation">[</span>-m N<span class="token punctuation">]</span> <span class="token punctuation">[</span>-A/B/C N<span class="token punctuation">]</span> PATTERN/-e PATTERN<span class="token punctuation">..</span>./-f FILE <span class="token punctuation">[</span>FILE<span class="token punctuation">]</span><span class="token punctuation">..</span>.

Search <span class="token keyword">for</span> <span class="token for-or-select variable">PATTERN</span> <span class="token keyword">in</span> FILEs <span class="token punctuation">(</span>or stdin<span class="token punctuation">)</span>

        <span class="token parameter variable">-H</span>      Add <span class="token string">&#39;filename:&#39;</span> prefix
        <span class="token parameter variable">-h</span>      Do not <span class="token function">add</span> <span class="token string">&#39;filename:&#39;</span> prefix
        <span class="token parameter variable">-n</span>      Add <span class="token string">&#39;line_no:&#39;</span> prefix
        <span class="token parameter variable">-l</span>      Show only names of files that match
        <span class="token parameter variable">-L</span>      Show only names of files that don<span class="token string">&#39;t match
        -c      Show only count of matching lines
        -o      Show only the matching part of line
        -q      Quiet. Return 0 if PATTERN is found, 1 otherwise
        -v      Select non-matching lines
        -s      Suppress open and read errors
        -r      Recurse
        -i      Ignore case
        -w      Match whole words only
        -x      Match whole lines only
        -F      PATTERN is a literal (not regexp)
        -E      PATTERN is an extended regexp
        -m N    Match up to N times per file
        -A N    Print N lines of trailing context
        -B N    Print N lines of leading context
        -C N    Same as &#39;</span><span class="token parameter variable">-A</span> N <span class="token parameter variable">-B</span> N&#39;
        <span class="token parameter variable">-e</span> PTRN Pattern to match
        <span class="token parameter variable">-f</span> FILE Read pattern from <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看容器内的挂载信息。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>/ <span class="token comment"># mount</span>
overlay on / <span class="token builtin class-name">type</span> overlay <span class="token punctuation">(</span>rw,relatime,lowerdir<span class="token operator">=</span>/var/lib/docker/overlay2/l/BOTCI5RF24AMC4A2UWF4N6ZWFP:/var/lib/docker/overlay2/l/TWVP5T5DMKJGXZOROR7CAPWGFP,upperdir<span class="token operator">=</span>/var/lib/docker/overlay2/801ef0bf6cce35288dbb8fe00a4f9cc47760444693bfdf339ed0bdcf926e12a3/diff,workdir<span class="token operator">=</span>/var/lib/docker/overlay2/801ef0bf6cce35288dbb8fe00a4f9cc47760444693bfdf339ed0bdcf926e12a3/work<span class="token punctuation">)</span>
proc on /proc <span class="token builtin class-name">type</span> proc <span class="token punctuation">(</span>rw,nosuid,nodev,noexec,relatime<span class="token punctuation">)</span>
tmpfs on /dev <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>rw,nosuid,size<span class="token operator">=</span>65536k,mode<span class="token operator">=</span><span class="token number">755</span><span class="token punctuation">)</span>
devpts on /dev/pts <span class="token builtin class-name">type</span> devpts <span class="token punctuation">(</span>rw,nosuid,noexec,relatime,gid<span class="token operator">=</span><span class="token number">5</span>,mode<span class="token operator">=</span><span class="token number">620</span>,ptmxmode<span class="token operator">=</span><span class="token number">666</span><span class="token punctuation">)</span>
sysfs on /sys <span class="token builtin class-name">type</span> sysfs <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime<span class="token punctuation">)</span>
tmpfs on /sys/fs/cgroup <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,mode<span class="token operator">=</span><span class="token number">755</span><span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/systemd <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,xattr,release_agent<span class="token operator">=</span>/lib/systemd/systemd-cgroups-agent,name<span class="token operator">=</span>systemd<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/net_cls,net_prio <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,net_cls,net_prio<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/freezer <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,freezer<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/cpu,cpuacct <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,cpu,cpuacct<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/cpuset <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,cpuset<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/blkio <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,blkio<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/perf_event <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,perf_event<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/memory <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,memory<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/devices <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,devices<span class="token punctuation">)</span>
cgroup on /sys/fs/cgroup/pids <span class="token builtin class-name">type</span> cgroup <span class="token punctuation">(</span>ro,nosuid,nodev,noexec,relatime,pids<span class="token punctuation">)</span>
mqueue on /dev/mqueue <span class="token builtin class-name">type</span> mqueue <span class="token punctuation">(</span>rw,nosuid,nodev,noexec,relatime<span class="token punctuation">)</span>
shm on /dev/shm <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>rw,nosuid,nodev,noexec,relatime,size<span class="token operator">=</span>65536k<span class="token punctuation">)</span>
/dev/vda1 on /etc/resolv.conf <span class="token builtin class-name">type</span> ext3 <span class="token punctuation">(</span>rw,noatime,data<span class="token operator">=</span>ordered<span class="token punctuation">)</span>
/dev/vda1 on /etc/hostname <span class="token builtin class-name">type</span> ext3 <span class="token punctuation">(</span>rw,noatime,data<span class="token operator">=</span>ordered<span class="token punctuation">)</span>
/dev/vda1 on /etc/hosts <span class="token builtin class-name">type</span> ext3 <span class="token punctuation">(</span>rw,noatime,data<span class="token operator">=</span>ordered<span class="token punctuation">)</span>
devpts on /dev/console <span class="token builtin class-name">type</span> devpts <span class="token punctuation">(</span>rw,nosuid,noexec,relatime,gid<span class="token operator">=</span><span class="token number">5</span>,mode<span class="token operator">=</span><span class="token number">620</span>,ptmxmode<span class="token operator">=</span><span class="token number">666</span><span class="token punctuation">)</span>
proc on /proc/bus <span class="token builtin class-name">type</span> proc <span class="token punctuation">(</span>ro,relatime<span class="token punctuation">)</span>
proc on /proc/fs <span class="token builtin class-name">type</span> proc <span class="token punctuation">(</span>ro,relatime<span class="token punctuation">)</span>
proc on /proc/irq <span class="token builtin class-name">type</span> proc <span class="token punctuation">(</span>ro,relatime<span class="token punctuation">)</span>
proc on /proc/sys <span class="token builtin class-name">type</span> proc <span class="token punctuation">(</span>ro,relatime<span class="token punctuation">)</span>
proc on /proc/sysrq-trigger <span class="token builtin class-name">type</span> proc <span class="token punctuation">(</span>ro,relatime<span class="token punctuation">)</span>
tmpfs on /proc/acpi <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>ro,relatime<span class="token punctuation">)</span>
tmpfs on /proc/kcore <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>rw,nosuid,size<span class="token operator">=</span>65536k,mode<span class="token operator">=</span><span class="token number">755</span><span class="token punctuation">)</span>
tmpfs on /proc/keys <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>rw,nosuid,size<span class="token operator">=</span>65536k,mode<span class="token operator">=</span><span class="token number">755</span><span class="token punctuation">)</span>
tmpfs on /proc/timer_list <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>rw,nosuid,size<span class="token operator">=</span>65536k,mode<span class="token operator">=</span><span class="token number">755</span><span class="token punctuation">)</span>
tmpfs on /proc/sched_debug <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>rw,nosuid,size<span class="token operator">=</span>65536k,mode<span class="token operator">=</span><span class="token number">755</span><span class="token punctuation">)</span>
tmpfs on /sys/firmware <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>ro,relatime<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>busybox</code> 镜像虽然小巧，但包括了大量常见的 <code>Linux</code> 命令，读者可以用它快速熟悉 <code>Linux</code> 命令。</p><h2 id="相关资源" tabindex="-1"><a class="header-anchor" href="#相关资源"><span>相关资源</span></a></h2>`,17)),s("ul",null,[s("li",null,[n[1]||(n[1]=s("code",null,"Busybox",-1)),n[2]||(n[2]=a(" 官网：")),s("a",d,[n[0]||(n[0]=a("https://busybox.net/")),o(e)])]),s("li",null,[n[4]||(n[4]=s("code",null,"Busybox",-1)),n[5]||(n[5]=a(" 官方仓库：")),s("a",m,[n[3]||(n[3]=a("https://git.busybox.net/busybox/")),o(e)])]),s("li",null,[n[7]||(n[7]=s("code",null,"Busybox",-1)),n[8]||(n[8]=a(" 官方镜像：")),s("a",b,[n[6]||(n[6]=a("https://hub.docker.com/_/busybox/")),o(e)])]),s("li",null,[n[10]||(n[10]=s("code",null,"Busybox",-1)),n[11]||(n[11]=a(" 官方仓库：")),s("a",v,[n[9]||(n[9]=a("https://github.com/docker-library/busybox")),o(e)])])])])}const x=t(u,[["render",k],["__file","busybox.html.vue"]]),h=JSON.parse('{"path":"/index/Docker/cases/os/busybox.html","title":"Busybox","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"获取官方镜像","slug":"获取官方镜像","link":"#获取官方镜像","children":[]},{"level":2,"title":"运行 busybox","slug":"运行-busybox","link":"#运行-busybox","children":[]},{"level":2,"title":"相关资源","slug":"相关资源","link":"#相关资源","children":[]}],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.67,"words":802},"filePathRelative":"index/Docker/cases/os/busybox.md","localizedDate":"2024年11月9日","excerpt":"\\n<h2>简介</h2>\\n<figure><figcaption>Busybox - Linux 瑞士军刀</figcaption></figure>\\n<p><code>BusyBox</code> 是一个集成了一百多个最常用 Linux 命令和工具（如 <code>cat</code>、<code>echo</code>、<code>grep</code>、<code>mount</code>、<code>telnet</code> 等）的精简工具箱，它只需要几 MB 的大小，很方便进行各种快速验证，被誉为“Linux 系统的瑞士军刀”。</p>\\n<p><code>BusyBox</code> 可运行于多款 <code>POSIX</code> 环境的操作系统中，如 <code>Linux</code>（包括 <code>Android</code>）、<code>Hurd</code>、<code>FreeBSD</code> 等。</p>"}');export{x as comp,h as data};
