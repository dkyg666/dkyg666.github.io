import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,a,d as t,e as o,o as d,r as l}from"./app-7pmo0-8W.js";const c={},p={href:"https://docs.docker.com/registry/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/docker/distribution",target:"_blank",rel:"noopener noreferrer"};function b(v,e){const s=l("ExternalLinkIcon");return d(),r("div",null,[e[4]||(e[4]=n("h1",{id:"私有仓库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#私有仓库"},[n("span",null,"私有仓库")])],-1)),e[5]||(e[5]=n("p",null,"有时候使用 Docker Hub 这样的公共仓库可能不方便，用户可以创建一个本地仓库供私人使用。",-1)),e[6]||(e[6]=n("p",null,"本节介绍如何使用本地仓库。",-1)),n("p",null,[n("a",p,[e[0]||(e[0]=n("code",null,"docker-registry",-1)),a(s)]),e[2]||(e[2]=t(" 是官方提供的工具，可以用于构建私有的镜像仓库。本文内容基于 ")),n("a",u,[e[1]||(e[1]=n("code",null,"docker-registry",-1)),a(s)]),e[3]||(e[3]=t(" v2.x 版本。"))]),e[7]||(e[7]=o(`<h2 id="安装运行-docker-registry" tabindex="-1"><a class="header-anchor" href="#安装运行-docker-registry"><span>安装运行 docker-registry</span></a></h2><h3 id="容器运行" tabindex="-1"><a class="header-anchor" href="#容器运行"><span>容器运行</span></a></h3><p>你可以使用官方 <code>registry</code> 镜像来运行。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> registry registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将使用官方的 <code>registry</code> 镜像来启动私有仓库。默认情况下，仓库会被创建在容器的 <code>/var/lib/registry</code> 目录下。你可以通过 <code>-v</code> 参数来将镜像文件存放在本地的指定路径。例如下面的例子将上传的镜像放到本地的 <code>/opt/data/registry</code> 目录。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 <span class="token punctuation">\\</span>
    <span class="token parameter variable">-v</span> /opt/data/registry:/var/lib/registry <span class="token punctuation">\\</span>
    registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在私有仓库上传、搜索、下载镜像" tabindex="-1"><a class="header-anchor" href="#在私有仓库上传、搜索、下载镜像"><span>在私有仓库上传、搜索、下载镜像</span></a></h2><p>创建好私有仓库之后，就可以使用 <code>docker tag</code> 来标记一个镜像，然后推送它到仓库。例如私有仓库地址为 <code>127.0.0.1:5000</code>。</p><p>先在本机查看已有的镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> image <span class="token function">ls</span>
REPOSITORY                        TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
ubuntu                            latest              ba5877dc9bec        <span class="token number">6</span> weeks ago         <span class="token number">192.7</span> MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>docker tag</code> 将 <code>ubuntu:latest</code> 这个镜像标记为 <code>127.0.0.1:5000/ubuntu:latest</code>。</p><p>格式为 <code>docker tag IMAGE[:TAG] [REGISTRY_HOST[:REGISTRY_PORT]/]REPOSITORY[:TAG]</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> tag ubuntu:latest <span class="token number">127.0</span>.0.1:5000/ubuntu:latest
$ <span class="token function">docker</span> image <span class="token function">ls</span>
REPOSITORY                        TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
ubuntu                            latest              ba5877dc9bec        <span class="token number">6</span> weeks ago         <span class="token number">192.7</span> MB
<span class="token number">127.0</span>.0.1:5000/ubuntu:latest      latest              ba5877dc9bec        <span class="token number">6</span> weeks ago         <span class="token number">192.7</span> MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>docker push</code> 上传标记的镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> push <span class="token number">127.0</span>.0.1:5000/ubuntu:latest
The push refers to repository <span class="token punctuation">[</span><span class="token number">127.0</span>.0.1:5000/ubuntu<span class="token punctuation">]</span>
373a30c24545: Pushed
a9148f5200b0: Pushed
cdd3de0940ab: Pushed
fc56279bbb33: Pushed
b38367233d37: Pushed
2aebd096e0e2: Pushed
latest: digest: sha256:fe4277621f10b5026266932ddf760f5a756d2facd505a94d2da12f4f52f71f5a size: <span class="token number">1568</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用 <code>curl</code> 查看仓库中的镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token number">127.0</span>.0.1:5000/v2/_catalog
<span class="token punctuation">{</span><span class="token string">&quot;repositories&quot;</span>:<span class="token punctuation">[</span><span class="token string">&quot;ubuntu&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里可以看到 <code>{&quot;repositories&quot;:[&quot;ubuntu&quot;]}</code>，表明镜像已经被成功上传了。</p><p>先删除已有镜像，再尝试从私有仓库中下载这个镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> image <span class="token function">rm</span> <span class="token number">127.0</span>.0.1:5000/ubuntu:latest

$ <span class="token function">docker</span> pull <span class="token number">127.0</span>.0.1:5000/ubuntu:latest
Pulling repository <span class="token number">127.0</span>.0.1:5000/ubuntu:latest
ba5877dc9bec: Download complete
511136ea3c5a: Download complete
9bad880da3d2: Download complete
25f11f5fb0cb: Download complete
ebc34468f71d: Download complete
2318d26665ef: Download complete

$ <span class="token function">docker</span> image <span class="token function">ls</span>
REPOSITORY                         TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
<span class="token number">127.0</span>.0.1:5000/ubuntu:latest       latest              ba5877dc9bec        <span class="token number">6</span> weeks ago         <span class="token number">192.7</span> MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置非-https-仓库地址" tabindex="-1"><a class="header-anchor" href="#配置非-https-仓库地址"><span>配置非 https 仓库地址</span></a></h2><p>如果你不想使用 <code>127.0.0.1:5000</code> 作为仓库地址，比如想让本网段的其他主机也能把镜像推送到私有仓库。你就得把例如 <code>192.168.199.100:5000</code> 这样的内网地址作为私有仓库地址，这时你会发现无法成功推送镜像。</p><p>这是因为 Docker 默认不允许非 <code>HTTPS</code> 方式推送镜像。我们可以通过 Docker 的配置选项来取消这个限制，或者查看下一节配置能够通过 <code>HTTPS</code> 访问的私有仓库。</p><h3 id="ubuntu-16-04-debian-8-centos-7" tabindex="-1"><a class="header-anchor" href="#ubuntu-16-04-debian-8-centos-7"><span>Ubuntu 16.04+, Debian 8+, centos 7</span></a></h3><p>对于使用 <code>systemd</code> 的系统，请在 <code>/etc/docker/daemon.json</code> 中写入如下内容（如果文件不存在请新建该文件）</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;https://mirror.baidubce.com&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;insecure-registries&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;192.168.199.100:5000&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：该文件必须符合 <code>json</code> 规范，否则 Docker 将不能启动。</p></blockquote><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><p>对于 Docker Desktop for Windows 、 Docker Desktop for Mac 在设置中的 <code>Docker Engine</code> 中进行编辑 ，增加和上边一样的字符串即可。</p>`,29))])}const h=i(c,[["render",b],["__file","registry.html.vue"]]),g=JSON.parse('{"path":"/index/Docker/repository/registry.html","title":"私有仓库","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"安装运行 docker-registry","slug":"安装运行-docker-registry","link":"#安装运行-docker-registry","children":[{"level":3,"title":"容器运行","slug":"容器运行","link":"#容器运行","children":[]}]},{"level":2,"title":"在私有仓库上传、搜索、下载镜像","slug":"在私有仓库上传、搜索、下载镜像","link":"#在私有仓库上传、搜索、下载镜像","children":[]},{"level":2,"title":"配置非 https 仓库地址","slug":"配置非-https-仓库地址","link":"#配置非-https-仓库地址","children":[{"level":3,"title":"Ubuntu 16.04+, Debian 8+, centos 7","slug":"ubuntu-16-04-debian-8-centos-7","link":"#ubuntu-16-04-debian-8-centos-7","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]}],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.57,"words":770},"filePathRelative":"index/Docker/repository/registry.md","localizedDate":"2024年11月9日","excerpt":"\\n<p>有时候使用 Docker Hub 这样的公共仓库可能不方便，用户可以创建一个本地仓库供私人使用。</p>\\n<p>本节介绍如何使用本地仓库。</p>\\n<p><a href=\\"https://docs.docker.com/registry/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>docker-registry</code></a> 是官方提供的工具，可以用于构建私有的镜像仓库。本文内容基于 <a href=\\"https://github.com/docker/distribution\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>docker-registry</code></a> v2.x 版本。</p>"}');export{h as comp,g as data};
