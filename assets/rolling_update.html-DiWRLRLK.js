import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as n,d as a,a as o,w as t,e as l,r,o as p}from"./app-7pmo0-8W.js";const c={};function m(u,e){const s=r("RouteLink");return p(),i("div",null,[e[7]||(e[7]=n("h1",{id:"swarm-mode-与滚动升级",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#swarm-mode-与滚动升级"},[n("span",null,"SWarm mode 与滚动升级")])],-1)),n("p",null,[e[1]||(e[1]=a("在 ")),o(s,{to:"/index/Docker/swarm_mode/deploy.html"},{default:t(()=>e[0]||(e[0]=[a("部署服务")])),_:1}),e[2]||(e[2]=a(" 一节中我们使用 ")),e[3]||(e[3]=n("code",null,"nginx:1.13.7-alpine",-1)),e[4]||(e[4]=a(" 镜像部署了一个名为 ")),e[5]||(e[5]=n("code",null,"nginx",-1)),e[6]||(e[6]=a(" 的服务。"))]),e[8]||(e[8]=l(`<p>现在我们想要将 <code>NGINX</code> 版本升级到 <code>1.13.12</code>，那么在 Swarm mode 中如何升级服务呢？</p><p>你可能会想到，先停止原来的服务，再使用新镜像部署一个服务，不就完成服务的 “升级” 了吗。</p><p>这样做的弊端很明显，如果新部署的服务出现问题，原来的服务删除之后，很难恢复，那么在 Swarm mode 中到底该如何对服务进行滚动升级呢？</p><p>答案就是使用 <code>docker service update</code> 命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token function">service</span> update <span class="token punctuation">\\</span>
    <span class="token parameter variable">--image</span> nginx:1.13.12-alpine <span class="token punctuation">\\</span>
    nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上命令使用 <code>--image</code> 选项更新了服务的镜像。当然我们也可以使用 <code>docker service update</code> 更新任意的配置。</p><p><code>--secret-add</code> 选项可以增加一个密钥</p><p><code>--secret-rm</code> 选项可以删除一个密钥</p><p>更多选项可以通过 <code>docker service update -h</code> 命令查看。</p><h2 id="服务回退" tabindex="-1"><a class="header-anchor" href="#服务回退"><span>服务回退</span></a></h2><p>现在假设我们发现 <code>nginx</code> 服务的镜像升级到 <code>nginx:1.13.12-alpine</code> 出现了一些问题，我们可以使用命令一键回退。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token function">service</span> rollback nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>现在使用 <code>docker service ps</code> 命令查看 <code>nginx</code> 服务详情。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token function">service</span> <span class="token function">ps</span> nginx

ID                  NAME                IMAGE                  NODE                DESIRED STATE       CURRENT STATE                ERROR               PORTS
rt677gop9d4x        nginx.1             nginx:1.13.7-alpine   VM-20-83-debian     Running             Running about a minute ago
d9pw13v59d00         <span class="token punctuation">\\</span>_ nginx.1         nginx:1.13.12-alpine  VM-20-83-debian     Shutdown            Shutdown <span class="token number">2</span> minutes ago
i7ynkbg6ybq5         <span class="token punctuation">\\</span>_ nginx.1         nginx:1.13.7-alpine   VM-20-83-debian     Shutdown            Shutdown <span class="token number">2</span> minutes ago
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果的输出详细记录了服务的部署、滚动升级、回退的过程。</p>`,15))])}const b=d(c,[["render",m],["__file","rolling_update.html.vue"]]),k=JSON.parse('{"path":"/index/Docker/swarm_mode/rolling_update.html","title":"SWarm mode 与滚动升级","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"服务回退","slug":"服务回退","link":"#服务回退","children":[]}],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.33,"words":399},"filePathRelative":"index/Docker/swarm_mode/rolling_update.md","localizedDate":"2024年11月9日","excerpt":"\\n<p>在 <a href=\\"/index/Docker/swarm_mode/deploy.html\\" target=\\"_blank\\">部署服务</a> 一节中我们使用 <code>nginx:1.13.7-alpine</code> 镜像部署了一个名为 <code>nginx</code> 的服务。</p>\\n<p>现在我们想要将 <code>NGINX</code> 版本升级到 <code>1.13.12</code>，那么在 Swarm mode 中如何升级服务呢？</p>\\n<p>你可能会想到，先停止原来的服务，再使用新镜像部署一个服务，不就完成服务的 “升级” 了吗。</p>\\n<p>这样做的弊端很明显，如果新部署的服务出现问题，原来的服务删除之后，很难恢复，那么在 Swarm mode 中到底该如何对服务进行滚动升级呢？</p>"}');export{b as comp,k as data};
