import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as e,d as n,a as i,e as r,o,r as p}from"./app-DYmmM49d.js";const d={},c={href:"https://docs.min.io/",target:"_blank",rel:"noopener noreferrer"},m={href:"http://x.x.x.x:9090",target:"_blank",rel:"noopener noreferrer"};function u(h,a){const s=p("ExternalLinkIcon");return o(),t("div",null,[a[2]||(a[2]=e("h1",{id:"minio",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#minio"},[e("span",null,"minio")])],-1)),a[3]||(a[3]=e("p",null,[e("strong",null,"MinIO"),n(" 是一个基于 Apache License v2.0 开源协议的对象存储服务。它兼容亚马逊 S3 云存储服务接口，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等，而一个对象文件可以是任意大小，从几 kb 到最大 5T 不等。")],-1)),a[4]||(a[4]=e("p",null,"MinIO 是一个非常轻量的服务,可以很简单的和其他应用的结合，类似 NodeJS, Redis 或者 MySQL。",-1)),e("p",null,[e("a",c,[a[0]||(a[0]=n("官方文档")),i(s)])]),a[5]||(a[5]=r(`<h2 id="简单使用" tabindex="-1"><a class="header-anchor" href="#简单使用"><span>简单使用</span></a></h2><p>测试、开发环境下不考虑数据存储的情况下可以使用下面的命令快速开启服务。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token parameter variable">-p</span> <span class="token number">9090</span>:9090 minio/minio server /data --console-address <span class="token string">&#39;:9090&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="离线部署" tabindex="-1"><a class="header-anchor" href="#离线部署"><span>离线部署</span></a></h2><p>许多生产环境是一般是没有公网资源的，这就需要从有公网资源的服务器上把镜像导出，然后导入到需要运行镜像的内网服务器。</p><h3 id="导出镜像" tabindex="-1"><a class="header-anchor" href="#导出镜像"><span>导出镜像</span></a></h3><p>在有公网资源的服务器上下载好<code>minio/minio</code>镜像</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> save <span class="token parameter variable">-o</span> minio.tar minio/minio:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>使用docker save 的时候，也可以使用image id 来导出，但是那样导出的时候，就会丢失原来的镜像名称，推荐，还是使用镜像名字+tag来导出镜像</p></blockquote><h3 id="导入镜像" tabindex="-1"><a class="header-anchor" href="#导入镜像"><span>导入镜像</span></a></h3><p>把压缩文件复制到内网服务器上，使用下面的命令导入镜像</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> load minio.tar 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="运行-minio" tabindex="-1"><a class="header-anchor" href="#运行-minio"><span>运行 minio</span></a></h3><ul><li>把 <code>/mnt/data</code> 改成要替换的数据目录</li><li>替换 <code>MINIO_ROOT_USER</code> 的值</li><li>替换 <code>MINIO_ROOT_PASSWORD</code> 的值</li><li>替换 name,minio1(可选)</li><li>如果 9000、9090 端口冲突,替换端口前面的如 <code>9009:9000</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token parameter variable">-p</span> <span class="token number">9090</span>:9090 <span class="token parameter variable">--name</span> minio1 <span class="token punctuation">\\</span>
  <span class="token parameter variable">-e</span> <span class="token string">&quot;MINIO_ROOT_USER=改成自己需要的&quot;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">-e</span> <span class="token string">&quot;MINIO_ROOT_PASSWORD=改成自己需要的&quot;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">-v</span> /mnt/data:/data <span class="token punctuation">\\</span>
  <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
  minio/minio server /data --console-address <span class="token string">&#39;:9090&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="访问-web-管理页面" tabindex="-1"><a class="header-anchor" href="#访问-web-管理页面"><span>访问 web 管理页面</span></a></h3>`,16)),e("p",null,[e("a",m,[a[1]||(a[1]=n("http://x.x.x.x:9090")),i(s)])])])}const k=l(d,[["render",u],["__file","minio.html.vue"]]),g=JSON.parse('{"path":"/index/Docker/appendix/repo/minio.html","title":"minio","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简单使用","slug":"简单使用","link":"#简单使用","children":[]},{"level":2,"title":"离线部署","slug":"离线部署","link":"#离线部署","children":[{"level":3,"title":"导出镜像","slug":"导出镜像","link":"#导出镜像","children":[]},{"level":3,"title":"导入镜像","slug":"导入镜像","link":"#导入镜像","children":[]},{"level":3,"title":"运行 minio","slug":"运行-minio","link":"#运行-minio","children":[]},{"level":3,"title":"访问 web 管理页面","slug":"访问-web-管理页面","link":"#访问-web-管理页面","children":[]}]}],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.54,"words":463},"filePathRelative":"index/Docker/appendix/repo/minio.md","localizedDate":"2024年11月9日","excerpt":"\\n<p><strong>MinIO</strong> 是一个基于 Apache License v2.0 开源协议的对象存储服务。它兼容亚马逊 S3 云存储服务接口，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等，而一个对象文件可以是任意大小，从几 kb 到最大 5T 不等。</p>\\n<p>MinIO 是一个非常轻量的服务,可以很简单的和其他应用的结合，类似 NodeJS, Redis 或者 MySQL。</p>\\n<p><a href=\\"https://docs.min.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a></p>"}');export{k as comp,g as data};
