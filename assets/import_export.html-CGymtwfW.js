import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e,o as t}from"./app-BwK79we4.js";const o={};function c(i,a){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="导出和导入容器" tabindex="-1"><a class="header-anchor" href="#导出和导入容器"><span>导出和导入容器</span></a></h1><h2 id="导出容器" tabindex="-1"><a class="header-anchor" href="#导出容器"><span>导出容器</span></a></h2><p>如果要导出本地某个容器，可以使用 <code>docker export</code> 命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> container <span class="token function">ls</span> <span class="token parameter variable">-a</span>
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                    PORTS               NAMES
7691a814370e        ubuntu:18.04        <span class="token string">&quot;/bin/bash&quot;</span>         <span class="token number">36</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">21</span> hours ago                       <span class="token builtin class-name">test</span>
$ <span class="token function">docker</span> <span class="token builtin class-name">export</span> 7691a814370e <span class="token operator">&gt;</span> ubuntu.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样将导出容器快照到本地文件。</p><h2 id="导入容器快照" tabindex="-1"><a class="header-anchor" href="#导入容器快照"><span>导入容器快照</span></a></h2><p>可以使用 <code>docker import</code> 从容器快照文件中再导入为镜像，例如</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> ubuntu.tar <span class="token operator">|</span> <span class="token function">docker</span> <span class="token function">import</span> - test/ubuntu:v1.0
$ <span class="token function">docker</span> image <span class="token function">ls</span>
REPOSITORY          TAG                 IMAGE ID            CREATED              VIRTUAL SIZE
test/ubuntu         v1.0                9d37a6082e97        About a minute ago   <span class="token number">171.3</span> MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，也可以通过指定 URL 或者某个目录来导入，例如</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token function">import</span> http://example.com/exampleimage.tgz example/imagerepo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>注：用户既可以使用 <code>docker load</code> 来导入镜像存储文件到本地镜像库，也可以使用 <code>docker import</code> 来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保存容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。</em></p>`,11)]))}const r=n(o,[["render",c],["__file","import_export.html.vue"]]),d=JSON.parse('{"path":"/index/Docker/container/import_export.html","title":"导出和导入容器","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"导出容器","slug":"导出容器","link":"#导出容器","children":[]},{"level":2,"title":"导入容器快照","slug":"导入容器快照","link":"#导入容器快照","children":[]}],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.97,"words":290},"filePathRelative":"index/Docker/container/import_export.md","localizedDate":"2024年11月9日","excerpt":"\\n<h2>导出容器</h2>\\n<p>如果要导出本地某个容器，可以使用 <code>docker export</code> 命令。</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>$ <span class=\\"token function\\">docker</span> container <span class=\\"token function\\">ls</span> <span class=\\"token parameter variable\\">-a</span>\\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                    PORTS               NAMES\\n7691a814370e        ubuntu:18.04        <span class=\\"token string\\">\\"/bin/bash\\"</span>         <span class=\\"token number\\">36</span> hours ago        Exited <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token number\\">21</span> hours ago                       <span class=\\"token builtin class-name\\">test</span>\\n$ <span class=\\"token function\\">docker</span> <span class=\\"token builtin class-name\\">export</span> 7691a814370e <span class=\\"token operator\\">&gt;</span> ubuntu.tar\\n</code></pre></div>"}');export{r as comp,d as data};
