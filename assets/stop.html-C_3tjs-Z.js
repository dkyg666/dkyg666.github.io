import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as s,o as t}from"./app-7pmo0-8W.js";const o={};function c(p,e){return t(),a("div",null,e[0]||(e[0]=[s(`<h1 id="终止容器" tabindex="-1"><a class="header-anchor" href="#终止容器"><span>终止容器</span></a></h1><p>可以使用 <code>docker container stop</code> 来终止一个运行中的容器。</p><p>此外，当 Docker 容器中指定的应用终结时，容器也自动终止。</p><p>例如对于上一章节中只启动了一个终端的容器，用户通过 <code>exit</code> 命令或 <code>Ctrl+d</code> 来退出终端时，所创建的容器立刻终止。</p><p>终止状态的容器可以用 <code>docker container ls -a</code> 命令看到。例如</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> container <span class="token function">ls</span> <span class="token parameter variable">-a</span>
CONTAINER ID        IMAGE                    COMMAND                CREATED             STATUS                          PORTS               NAMES
ba267838cc1b        ubuntu:18.04             <span class="token string">&quot;/bin/bash&quot;</span>            <span class="token number">30</span> minutes ago      Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> About a minute ago                       trusting_newton
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>处于终止状态的容器，可以通过 <code>docker container start</code> 命令来重新启动。</p><p>此外，<code>docker container restart</code> 命令会将一个运行态的容器终止，然后再重新启动它。</p>`,8)]))}const d=n(o,[["render",c],["__file","stop.html.vue"]]),l=JSON.parse('{"path":"/index/Docker/container/stop.html","title":"终止容器","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":1731129855000,"updatedTime":1731129855000,"contributors":[{"name":"dkyg666","email":"43946866+dkyg666@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.62,"words":187},"filePathRelative":"index/Docker/container/stop.md","localizedDate":"2024年11月9日","excerpt":"\\n<p>可以使用 <code>docker container stop</code> 来终止一个运行中的容器。</p>\\n<p>此外，当 Docker 容器中指定的应用终结时，容器也自动终止。</p>\\n<p>例如对于上一章节中只启动了一个终端的容器，用户通过 <code>exit</code> 命令或 <code>Ctrl+d</code> 来退出终端时，所创建的容器立刻终止。</p>\\n<p>终止状态的容器可以用 <code>docker container ls -a</code> 命令看到。例如</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>$ <span class=\\"token function\\">docker</span> container <span class=\\"token function\\">ls</span> <span class=\\"token parameter variable\\">-a</span>\\nCONTAINER ID        IMAGE                    COMMAND                CREATED             STATUS                          PORTS               NAMES\\nba267838cc1b        ubuntu:18.04             <span class=\\"token string\\">\\"/bin/bash\\"</span>            <span class=\\"token number\\">30</span> minutes ago      Exited <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> About a minute ago                       trusting_newton\\n</code></pre></div>"}');export{d as comp,l as data};
